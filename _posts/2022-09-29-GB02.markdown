---
title:  "Github 사용법 (add, push, pull)"
date:   2022-09-29
categories: Github_Blog
toc: true
toc_sticky: true
---

본 글은 Github 블로그를 구축하기 위한 기본적인 Github 이용법을 소개한다. 터미널 환경에서 `git` 명령어를 이용해서 다양한 작업을 수행한다.
<br><br>

# 1. Github란?
깃허브(Github)를 이해하기 위해서는 먼저 git의 의미를 알아야한다. 

<p align="center">
  <img src="/assets/images/GB02/img01.png">
</p> 

`git`이란 **'분산형 버전관리 시스템'**을 의미한다. 우리가 문서 파일들을 저장하는 경우, 보통 아래의 사진처럼 버전을 나누어 저장한다. 문서의 용량 10MB라면 총 5개의 버전이니까 50MB의 저장 공간이 필요하다. 이는 굉장히 비효율적인 방식으로 git은 각 버전들간의 **변경사항**만을 저장하여 버전을 관리한다.

`github`는 git을 인터넷 서버 상에 저장하는 **원격저장소** 역할을 수행한다. 그 덕분에 프로젝트를 진행함에 있어서 다른 사람들과 코드 공유를 더욱 수월하게 수행할 수 있다.
<br><br>

# 2. Git 용어 설명

git을 위한 기본적인 요소는 다음 세가지로 구성된다. 
* github : 원격 저장소
* local : 사용자 저장소
* commit : github로 내보내기 이전의 중간자
  
<p align="center">
  <img src="/assets/images/GB02/img02.jpg" style="max-width: 50%; height: auto;">
</p> 

각 요소들 간에 파일을 주고받는 동작의 이름은 다음과 같다.
* add : commit에 프로젝트 변경사항을 추가하는 동작
* pull : github로 프로젝트를 업로드하는 동작
* push : github에서 프로젝트를 다운로드하는 동작
<br><br>

# 3. Github 사용하기
```bash
>> git --version
git version 2.37.3
>> git config --global user.name ["사용자 이름"]
>> git config --global user.email ["이메일"]
```
git은 기본적으로 설치되어있기 때문에, 별도의 설치는 필요없지만 혹시 모르니 설치 여부 및 버전을 확인해본다. 그 뒤에 사용자의 github 아이디와 이메일을 등록해준다.

```py
>> git remote add ["저장소 이름"] ["Repository 주소"]
```
<p align="center">
  <img src="/assets/images/GB02/img03.png" style="max-width: 50%; height: auto;">
</p> 

그 다음으로 github에서 받아오고자 하는 프로젝트의 주소를 원격저장소로 지정한다. 이때 저장소 이름은 'origin'등 사용자 임의의 이름을 지정하고, 주소는 위의 사진처럼 github 사이트의 code에서 확인할 수 있다.

``` py
>> cd ["프로젝트 경로"]
>> git pull
```

지정한 원격 저장소로부터 지정한 경로에 프로젝트 파일 및 변경사항을 다운로드한다.

```py
>> git status
수정 사항 출력...

>> git add ["파일 경로"]
>> git add .
``` 
코드 수정을 마친 후, 원격저장소로 보낼 파일을 `staging(add 명령어)` 한다. status 명령어는 현재 프로젝트에서 어떤 파일이 수정 혹은 삭제되었는지 모든 내역을 보여준다. staging 단계에서는 수정하고자하는 부분만을 지정하거나, dot(.)을 입력하여 모든 수정된 부분을 commit할 수 있다.

```py
>> git commit -m ["메모"]
```
이후, staging된 파일들을 commit으로 로컬저장소에 변경사항을 저장한다. 뒤에 -m 명령어를 통해서 해당 commit에 대한 설명을 덧붙일 수 있다.

```py
>> git push ["저장소 이름"] ["branch 이름"]
```

마지막으로 로컬 저장소에 있는 commit을 push 명령어를 통해서 github에 업로드하면 변경사항을 원격 저장소에 저장할 수 있다.
<br><br>

# 4. 결과
<p align="center">
  <img src="/assets/images/GB02/img04.png" style="max-width: 70%; height: auto;">
</p> 

Github 사이트에서 해당 repository에 가보면 자신이 commit할 때의 메모와 함께 수정된 파일이 업로드 되어있는 것을 확인할 수 있다.